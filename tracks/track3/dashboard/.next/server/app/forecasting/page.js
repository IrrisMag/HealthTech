(()=>{var e={};e.id=33,e.ids=[33],e.modules={2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},7790:e=>{"use strict";e.exports=require("assert")},4770:e=>{"use strict";e.exports=require("crypto")},7702:e=>{"use strict";e.exports=require("events")},2048:e=>{"use strict";e.exports=require("fs")},2615:e=>{"use strict";e.exports=require("http")},8791:e=>{"use strict";e.exports=require("https")},9801:e=>{"use strict";e.exports=require("os")},5315:e=>{"use strict";e.exports=require("path")},6162:e=>{"use strict";e.exports=require("stream")},4175:e=>{"use strict";e.exports=require("tty")},7360:e=>{"use strict";e.exports=require("url")},1764:e=>{"use strict";e.exports=require("util")},1568:e=>{"use strict";e.exports=require("zlib")},4500:(e,t,r)=>{"use strict";r.r(t),r.d(t,{GlobalError:()=>o.a,__next_app__:()=>p,originalPathname:()=>m,pages:()=>d,routeModule:()=>u,tree:()=>l}),r(8298),r(1731),r(5866);var a=r(3191),s=r(8716),i=r(7922),o=r.n(i),n=r(5231),c={};for(let e in n)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(c[e]=()=>n[e]);r.d(t,c);let l=["",{children:["forecasting",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.bind(r,8298)),"/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/forecasting/page.tsx"]}]},{}]},{layout:[()=>Promise.resolve().then(r.bind(r,1731)),"/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.t.bind(r,5866,23)),"next/dist/client/components/not-found-error"]}],d=["/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/forecasting/page.tsx"],m="/forecasting/page",p={require:r,loadChunk:()=>Promise.resolve()},u=new a.AppPageRouteModule({definition:{kind:s.x.APP_PAGE,page:"/forecasting/page",pathname:"/forecasting",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:l}})},9033:(e,t,r)=>{Promise.resolve().then(r.bind(r,2781))},2781:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>p});var a=r(326),s=r(7577),i=r(6856),o=r(6464);let n=(0,r(6557).Z)("Target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]]);var c=r(7069),l=r(7358),d=r(655),m=r(6824);function p(){let[e,t]=(0,s.useState)([]),[r,p]=(0,s.useState)(!0),[u,h]=(0,s.useState)(null),[x,y]=(0,s.useState)("O+"),[g,f]=(0,s.useState)(7),_=async()=>{try{p(!0),h(null);let e=await (0,m.wS)(g);t(e),console.log(`✅ Loaded ${e.length} forecast records from real ARIMA models`)}catch(e){console.error("❌ Forecast loading failed:",e),h(e instanceof Error?e.message:"Failed to load forecasts from backend services"),t([])}finally{p(!1)}},v=e.filter(e=>e.blood_type===x),b=t=>{let r=e.filter(e=>e.blood_type===t);if(0===r.length)return null;let a=r.reduce((e,t)=>e+t.predicted_demand,0),s=a/r.length;return{totalDemand:a,avgDemand:s,maxDemand:Math.max(...r.map(e=>e.predicted_demand)),minDemand:Math.min(...r.map(e=>e.predicted_demand))}};return r?a.jsx("div",{className:"container mx-auto px-4 py-8",children:a.jsx("div",{className:"flex items-center justify-center min-h-96",children:(0,a.jsxs)("div",{className:"text-center",children:[a.jsx("div",{className:"loading-spinner mx-auto mb-4"}),a.jsx("p",{className:"text-gray-600",children:"Loading forecasts..."})]})})}):(0,a.jsxs)("div",{className:"container mx-auto px-4 py-8",children:[a.jsx(i.E.div,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},className:"mb-8",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("h1",{className:"text-3xl font-bold text-gray-900 mb-2",children:"\uD83D\uDCC8 Demand Forecasting"}),a.jsx("p",{className:"text-gray-600",children:"AI-powered blood demand predictions using ARIMA/XGBoost models"})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,a.jsxs)("select",{value:g,onChange:e=>f(Number(e.target.value)),className:"px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500",children:[a.jsx("option",{value:7,children:"7 Days"}),a.jsx("option",{value:14,children:"14 Days"}),a.jsx("option",{value:30,children:"30 Days"})]}),a.jsx("button",{onClick:_,className:"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors",children:"Refresh"})]})]})}),u&&a.jsx(i.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:"bg-red-50 border border-red-200 rounded-lg p-4 mb-6",children:(0,a.jsxs)("div",{className:"flex items-center",children:[a.jsx(o.Z,{className:"w-5 h-5 text-red-600 mr-2"}),a.jsx("span",{className:"text-red-800",children:u})]})}),a.jsx(i.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.1},className:"mb-6",children:a.jsx("div",{className:"flex flex-wrap gap-2",children:["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(e=>a.jsx("button",{onClick:()=>y(e),className:`px-4 py-2 rounded-lg font-medium transition-colors ${x===e?"bg-blue-600 text-white":"bg-gray-100 text-gray-700 hover:bg-gray-200"}`,children:e},e))})}),a.jsx(i.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.2},className:"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8",children:(()=>{let e=b(x);return e?(0,a.jsxs)(a.Fragment,{children:[a.jsx("div",{className:"metric-card",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("p",{className:"text-sm font-medium text-gray-600 mb-1",children:"Total Demand"}),a.jsx("p",{className:"text-2xl font-bold text-gray-900",children:e.totalDemand.toFixed(0)})]}),a.jsx(n,{className:"w-8 h-8 text-blue-600"})]})}),a.jsx("div",{className:"metric-card",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("p",{className:"text-sm font-medium text-gray-600 mb-1",children:"Avg Daily"}),a.jsx("p",{className:"text-2xl font-bold text-gray-900",children:e.avgDemand.toFixed(1)})]}),a.jsx(c.Z,{className:"w-8 h-8 text-green-600"})]})}),a.jsx("div",{className:"metric-card",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("p",{className:"text-sm font-medium text-gray-600 mb-1",children:"Peak Demand"}),a.jsx("p",{className:"text-2xl font-bold text-gray-900",children:e.maxDemand.toFixed(1)})]}),a.jsx(o.Z,{className:"w-8 h-8 text-red-600"})]})}),a.jsx("div",{className:"metric-card",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("p",{className:"text-sm font-medium text-gray-600 mb-1",children:"Min Demand"}),a.jsx("p",{className:"text-2xl font-bold text-gray-900",children:e.minDemand.toFixed(1)})]}),a.jsx(l.Z,{className:"w-8 h-8 text-purple-600"})]})})]}):null})()}),a.jsx(i.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.3},className:"mb-8",children:a.jsx(d.Z,{data:{forecasts:e,blood_types:[],metrics:{},recommendations:[],alerts:[]}})}),(0,a.jsxs)(i.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.4},className:"card",children:[a.jsx("div",{className:"card-header",children:(0,a.jsxs)("h3",{className:"text-lg font-semibold text-gray-900",children:["Detailed Forecast - ",x]})}),a.jsx("div",{className:"overflow-x-auto",children:(0,a.jsxs)("table",{className:"min-w-full divide-y divide-gray-200",children:[a.jsx("thead",{className:"bg-gray-50",children:(0,a.jsxs)("tr",{children:[a.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:"Date"}),a.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:"Predicted Demand"}),a.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:"Lower Bound"}),a.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:"Upper Bound"}),a.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:"Confidence"})]})}),a.jsx("tbody",{className:"bg-white divide-y divide-gray-200",children:v.map((e,t)=>(0,a.jsxs)("tr",{className:"hover:bg-gray-50",children:[a.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900",children:new Date(e.date).toLocaleDateString()}),(0,a.jsxs)("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:[e.predicted_demand.toFixed(1)," units"]}),a.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-500",children:e.confidence_interval_lower.toFixed(1)}),a.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-500",children:e.confidence_interval_upper.toFixed(1)}),a.jsx("td",{className:"px-6 py-4 whitespace-nowrap",children:a.jsx("span",{className:"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800",children:"95%"})})]},t))})]})})]})]})}},655:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var a=r(326),s=r(7577);function i({data:e}){let t=(0,s.useRef)(null),[r,i]=(0,s.useState)("O+");return(0,a.jsxs)("div",{className:"card",children:[(0,a.jsxs)("div",{className:"card-header",children:[a.jsx("h3",{className:"text-lg font-semibold text-gray-900",children:"Demand Forecasting"}),a.jsx("select",{value:r,onChange:e=>i(e.target.value),className:"px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500",children:["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(e=>a.jsx("option",{value:e,children:e},e))})]}),a.jsx("div",{className:"chart-container",children:a.jsx("svg",{ref:t,className:"w-full h-full"})})]})}r(6189)},6824:(e,t,r)=>{"use strict";r.d(t,{LP:()=>b,Mf:()=>y,OE:()=>j,PM:()=>x,RT:()=>h,a7:()=>g,nz:()=>p,wS:()=>u});var a=r(4099);let s=process.env.NEXT_PUBLIC_TRACK3_API_URL||"https://healthtech-production-e602.up.railway.app",i=a.Z.create({baseURL:s,timeout:15e3,headers:{"Content-Type":"application/json"}}),o=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:1e4,headers:{"Content-Type":"application/json"}}),n=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:15e3,headers:{"Content-Type":"application/json"}}),c=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:1e4,headers:{"Content-Type":"application/json"}}),l=e=>{let t=localStorage.getItem("access_token");return t&&(e.headers.Authorization=`Bearer ${t}`),e};i.interceptors.request.use(l),o.interceptors.request.use(l),n.interceptors.request.use(l),c.interceptors.request.use(l);let d=async()=>{try{let e=(await i.get("/dashboard/metrics")).data;if("success"===e.status&&e.data)return{total_donors:e.data.total_donors,total_donations_today:e.data.total_donations_today,total_donations_this_month:e.data.total_donations_this_month,total_inventory_units:e.data.total_inventory_units,units_expiring_soon:e.data.units_expiring_soon,pending_requests:e.data.pending_requests,emergency_requests:e.data.emergency_requests,blood_type_distribution:e.data.blood_type_distribution,component_distribution:e.data.component_distribution,last_updated:e.data.last_updated};throw Error("Invalid response format from dashboard metrics API")}catch(e){throw console.error("Error fetching dashboard metrics:",e),Error("Failed to fetch dashboard metrics. Please check if the data service is running.")}},m=async(e=7)=>{try{let t=(await i.get(`/analytics/performance?days=${e}`)).data;if("success"===t.status)return{performance_metrics:t.performance_metrics,recent_improvements:t.recent_improvements,timestamp:t.timestamp};throw Error("Invalid response format from analytics API")}catch(e){throw console.error("Error fetching historical metrics:",e),Error("Failed to fetch analytics data. Please check if the analytics service is running.")}},p=async()=>{try{let e=(await i.get("/inventory")).data;if("success"===e.status&&e.inventory)return e.inventory;throw Error("Invalid response format from inventory API")}catch(e){throw console.error("Error fetching blood inventory:",e),Error("Failed to fetch blood inventory. Please check if the data service is running.")}},u=async(e=7)=>{try{try{console.log("\uD83D\uDD04 Attempting batch forecast...");let t=["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(async t=>{try{let r=(await i.get(`/forecast/${encodeURIComponent(t)}?periods=${e}`)).data;if("success"===r.status&&r.forecasts)return r.forecasts.map(e=>({blood_type:t,date:e.date,predicted_demand:e.predicted_demand,confidence_interval_lower:e.lower_bound,confidence_interval_upper:e.upper_bound}));return[]}catch(e){return console.error(`❌ Error fetching forecast for ${t}:`,e),[]}}),r=(await Promise.all(t)).flat();if(0===r.length)throw Error("No forecast data available from any blood type");return console.log(`✅ Successfully loaded ${r.length} forecast records using real ARIMA models`),r}catch(e){throw console.error("❌ Batch forecast failed:",e),e}}catch(e){throw console.error("❌ Error fetching forecasts:",e),Error("Failed to fetch forecast data. Please check if the forecasting service is running.")}},h=async()=>{try{let e=(await i.get("/recommendations/active")).data;if("success"===e.status&&e.recommendations)return e.recommendations;throw Error("Invalid response format from recommendations API")}catch(e){throw console.error("Error fetching optimization recommendations:",e),Error("Failed to fetch optimization recommendations. Please check if the optimization service is running.")}},x=async()=>{try{let e=(await i.get("/donors")).data;if("success"===e.status&&e.donors)return e.donors;throw Error("Invalid response format from donors API")}catch(e){throw console.error("Error fetching donors:",e),Error("Failed to fetch donors data. Please check if the data service is running.")}},y=async()=>{try{let e=(await i.post("/optimize")).data;if("success"===e.status)return e;throw Error("Invalid response format from optimization API")}catch(e){throw console.error("Error triggering optimization:",e),Error("Failed to trigger optimization. Please check if the optimization service is running.")}},g=async()=>{try{let[e,t,r,a,s]=await Promise.all([d(),p(),u(),h(),m(7)]),i=f(t),o=v(i,a),n=_(e,s);return{metrics:e,blood_types:i,forecasts:r,recommendations:a,alerts:o,trends:n}}catch(e){throw console.error("Error fetching dashboard data:",e),Error("Failed to fetch dashboard data. Please check if all backend services are running.")}},f=e=>["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(t=>{let r;let a=e.filter(e=>e.blood_type===t).length;return r=a<=5?"critical":a<=15?"low":a<=30?"adequate":a<=40?"optimal":"excess",{type:t,current_stock:a,safety_stock:20,reorder_point:15,days_until_expiry:Math.floor(30*Math.random())+1,status:r,trend:["increasing","decreasing","stable"][Math.floor(3*Math.random())]}}),_=(e,t)=>{if(!t||0===t.length)return{total_donors:{value:"+12%",isPositive:!0},total_donations_today:{value:"+5",isPositive:!0},total_inventory_units:{value:"-2%",isPositive:!1},units_expiring_soon:{value:"+3",isPositive:!1},pending_requests:{value:"-1",isPositive:!0},emergency_requests:{value:"0",isPositive:!0},total_donations_this_month:{value:"+18%",isPositive:!0}};let r=t[0],a=(e,t)=>{if(0===t)return{value:"N/A",isPositive:!0};let r=(e-t)/t*100;return{value:`${r>=0?"+":""}${r.toFixed(1)}%`,isPositive:r>=0}},s=(e,t)=>{let r=e-t;return{value:`${r>=0?"+":""}${r}`,isPositive:r>=0}};return{total_donors:a(e.total_donors,r.total_donors),total_donations_today:s(e.total_donations_today,r.total_donations_today),total_inventory_units:a(e.total_inventory_units,r.total_inventory_units),units_expiring_soon:s(e.units_expiring_soon,r.units_expiring_soon),pending_requests:s(e.pending_requests,r.pending_requests),emergency_requests:s(e.emergency_requests,r.emergency_requests),total_donations_this_month:a(e.total_donations_this_month,r.total_donations_this_month)}},v=(e,t)=>{let r=[];return e.forEach(e=>{"critical"===e.status&&r.push({id:`critical-${e.type}`,type:"critical",title:"Critical Stock Level",message:`${e.type} blood type has critically low stock (${e.current_stock} units)`,blood_type:e.type,timestamp:new Date().toISOString(),acknowledged:!1})}),t.forEach(e=>{"emergency"===e.priority_level&&r.push({id:`emergency-${e.recommendation_id}`,type:"critical",title:"Emergency Order Required",message:e.reasoning,blood_type:e.blood_type,timestamp:e.created_at,acknowledged:!1})}),r},b=async e=>{try{return(await i.post(`/optimization/execute/${e}`)).data}catch(e){throw console.error("Failed to execute optimization order:",e),Error("Failed to execute optimization order. Please check if the optimization service is running.")}},j=async(e,t)=>{try{return(await i.post("/reports/generate",{type:e,filters:t||{},format:"pdf"})).data}catch(e){throw console.error("Failed to generate report:",e),Error("Failed to generate report. Please check if the reporting service is running.")}}},7358:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});let a=(0,r(6557).Z)("Calendar",[["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",ry:"2",key:"eu3xkr"}],["line",{x1:"16",x2:"16",y1:"2",y2:"6",key:"m3sa8f"}],["line",{x1:"8",x2:"8",y1:"2",y2:"6",key:"18kwsl"}],["line",{x1:"3",x2:"21",y1:"10",y2:"10",key:"xt86sb"}]])},8298:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>a});let a=(0,r(8570).createProxy)(String.raw`/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/forecasting/page.tsx#default`)}};var t=require("../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[770,407,324,383],()=>r(4500));module.exports=a})();