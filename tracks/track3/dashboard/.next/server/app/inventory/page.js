(()=>{var e={};e.id=268,e.ids=[268],e.modules={2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},7790:e=>{"use strict";e.exports=require("assert")},4770:e=>{"use strict";e.exports=require("crypto")},7702:e=>{"use strict";e.exports=require("events")},2048:e=>{"use strict";e.exports=require("fs")},2615:e=>{"use strict";e.exports=require("http")},8791:e=>{"use strict";e.exports=require("https")},9801:e=>{"use strict";e.exports=require("os")},5315:e=>{"use strict";e.exports=require("path")},6162:e=>{"use strict";e.exports=require("stream")},4175:e=>{"use strict";e.exports=require("tty")},7360:e=>{"use strict";e.exports=require("url")},1764:e=>{"use strict";e.exports=require("util")},1568:e=>{"use strict";e.exports=require("zlib")},426:(e,t,r)=>{"use strict";r.r(t),r.d(t,{GlobalError:()=>i.a,__next_app__:()=>u,originalPathname:()=>p,pages:()=>d,routeModule:()=>m,tree:()=>c}),r(4230),r(1731),r(5866);var a=r(3191),s=r(8716),o=r(7922),i=r.n(o),n=r(5231),l={};for(let e in n)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(l[e]=()=>n[e]);r.d(t,l);let c=["",{children:["inventory",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.bind(r,4230)),"/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/inventory/page.tsx"]}]},{}]},{layout:[()=>Promise.resolve().then(r.bind(r,1731)),"/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.t.bind(r,5866,23)),"next/dist/client/components/not-found-error"]}],d=["/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/inventory/page.tsx"],p="/inventory/page",u={require:r,loadChunk:()=>Promise.resolve()},m=new a.AppPageRouteModule({definition:{kind:s.x.APP_PAGE,page:"/inventory/page",pathname:"/inventory",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:c}})},1872:(e,t,r)=>{Promise.resolve().then(r.bind(r,6210))},6210:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>p});var a=r(326),s=r(7577),o=r(6856),i=r(7202),n=r(2978),l=r(8998);let c=(0,r(6557).Z)("Thermometer",[["path",{d:"M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z",key:"17jzev"}]]);var d=r(6824);function p(){let[e,t]=(0,s.useState)([]),[r,p]=(0,s.useState)(!0),[u,m]=(0,s.useState)(null),[h,y]=(0,s.useState)("all"),g=async()=>{try{m(null);let e=await (0,d.nz)();if(Array.isArray(e)){let r=e.map(e=>({...e,id:e.id||`item-${Date.now()}-${Math.random()}`,blood_type:e.blood_type||"O+",quantity:e.quantity||1,status:e.status||"available",location:e.location||"Main Storage",temperature:e.temperature||4,expiry_date:e.expiry_date||new Date().toISOString(),created_at:e.created_at||new Date().toISOString(),updated_at:e.updated_at||new Date().toISOString()}));t(r)}else{let r=e?.inventory||e?.data||[];if(Array.isArray(r)){let e=r.map(e=>({...e,id:e.id||`item-${Date.now()}-${Math.random()}`,blood_type:e.blood_type||"O+",quantity:e.quantity||1,status:e.status||"available",location:e.location||"Main Storage",temperature:e.temperature||4,expiry_date:e.expiry_date||new Date().toISOString(),created_at:e.created_at||new Date().toISOString(),updated_at:e.updated_at||new Date().toISOString()}));t(e)}else t([])}}catch(e){m(e instanceof Error?e.message:"Failed to load inventory"),t([])}finally{p(!1)}},x=e=>{switch(e){case"critical":return"bg-red-100 text-red-800";case"expired":return"bg-gray-100 text-gray-800";case"reserved":return"bg-yellow-100 text-yellow-800";default:return"bg-green-100 text-green-800"}},_=e=>({"A+":"bg-red-500","A-":"bg-red-600","B+":"bg-blue-500","B-":"bg-blue-600","AB+":"bg-purple-500","AB-":"bg-purple-600","O+":"bg-orange-500","O-":"bg-orange-600"})[e]||"bg-gray-500",f=Array.isArray(e)?e.filter(e=>"all"===h||e.blood_type===h):[];return r?a.jsx("div",{className:"container mx-auto px-4 py-8",children:a.jsx("div",{className:"flex items-center justify-center min-h-96",children:(0,a.jsxs)("div",{className:"text-center",children:[a.jsx("div",{className:"loading-spinner mx-auto mb-4"}),a.jsx("p",{className:"text-gray-600",children:"Loading inventory..."})]})})}):u?a.jsx("div",{className:"container mx-auto px-4 py-8",children:a.jsx("div",{className:"flex items-center justify-center min-h-96",children:(0,a.jsxs)("div",{className:"text-center",children:[a.jsx(i.Z,{className:"w-12 h-12 text-red-500 mx-auto mb-4"}),a.jsx("h2",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Error Loading Inventory"}),a.jsx("p",{className:"text-gray-600 mb-4",children:u}),a.jsx("button",{onClick:g,className:"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors",children:"Retry"})]})})}):(0,a.jsxs)("div",{className:"container mx-auto px-4 py-8",children:[a.jsx(o.E.div,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},className:"mb-8",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{children:[a.jsx("h1",{className:"text-3xl font-bold text-gray-900 mb-2",children:"\uD83E\uDE78 Blood Inventory Management"}),a.jsx("p",{className:"text-gray-600",children:"Real-time blood stock monitoring and management"})]}),a.jsx("button",{onClick:g,className:"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors",children:"Refresh"})]})}),a.jsx(o.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.1},className:"mb-6",children:a.jsx("div",{className:"flex flex-wrap gap-2",children:["all","A+","A-","B+","B-","AB+","AB-","O+","O-"].map(e=>a.jsx("button",{onClick:()=>y(e),className:`px-3 py-1 rounded-full text-sm font-medium transition-colors ${h===e?"bg-blue-600 text-white":"bg-gray-100 text-gray-700 hover:bg-gray-200"}`,children:"all"===e?"All Types":e},e))})}),a.jsx(o.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.2},className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6",children:0===f.length?(0,a.jsxs)("div",{className:"col-span-full text-center py-12",children:[a.jsx(n.Z,{className:"w-16 h-16 text-gray-400 mx-auto mb-4"}),a.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"No Inventory Found"}),a.jsx("p",{className:"text-gray-600",children:"all"===h?"No blood inventory items available.":`No ${h} blood type items found.`})]}):f.map((e,t)=>(0,a.jsxs)(o.E.div,{initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},transition:{delay:.05*t},className:"bg-white rounded-lg shadow-md p-6 border border-gray-200 hover:shadow-lg transition-shadow",children:[(0,a.jsxs)("div",{className:"flex items-center justify-between mb-4",children:[a.jsx("span",{className:`inline-flex items-center px-3 py-1 rounded-full text-sm font-semibold text-white ${_(e.blood_type)}`,children:e.blood_type}),a.jsx("span",{className:`status-indicator ${x(e.status||"available")}`,children:(e.status||"available").toUpperCase()})]}),(0,a.jsxs)("div",{className:"space-y-3",children:[(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[a.jsx("span",{className:"text-sm text-gray-600",children:"Quantity"}),(0,a.jsxs)("span",{className:"font-semibold",children:[e.quantity," units"]})]}),(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[a.jsx("span",{className:"text-sm text-gray-600",children:"Location"}),a.jsx("span",{className:"text-sm",children:e.location})]}),(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("span",{className:"text-sm text-gray-600 flex items-center",children:[a.jsx(l.Z,{className:"w-4 h-4 mr-1"}),"Expires"]}),a.jsx("span",{className:"text-sm",children:new Date(e.expiry_date).toLocaleDateString()})]}),(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("span",{className:"text-sm text-gray-600 flex items-center",children:[a.jsx(c,{className:"w-4 h-4 mr-1"}),"Temperature"]}),(0,a.jsxs)("span",{className:"text-sm",children:[e.temperature,"\xb0C"]})]})]})]},e.id))})]})}},6824:(e,t,r)=>{"use strict";r.d(t,{LP:()=>b,Mf:()=>g,OE:()=>w,PM:()=>y,RT:()=>h,a7:()=>x,nz:()=>u,wS:()=>m});var a=r(4099);let s=process.env.NEXT_PUBLIC_TRACK3_API_URL||"https://healthtech-production-e602.up.railway.app",o=a.Z.create({baseURL:s,timeout:15e3,headers:{"Content-Type":"application/json"}}),i=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:1e4,headers:{"Content-Type":"application/json"}}),n=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:15e3,headers:{"Content-Type":"application/json"}}),l=a.Z.create({baseURL:"https://healthtech-production-e602.up.railway.app",timeout:1e4,headers:{"Content-Type":"application/json"}}),c=e=>{let t=localStorage.getItem("access_token");return t&&(e.headers.Authorization=`Bearer ${t}`),e};o.interceptors.request.use(c),i.interceptors.request.use(c),n.interceptors.request.use(c),l.interceptors.request.use(c);let d=async()=>{try{let e=(await o.get("/dashboard/metrics")).data;if("success"===e.status&&e.data)return{total_donors:e.data.total_donors,total_donations_today:e.data.total_donations_today,total_donations_this_month:e.data.total_donations_this_month,total_inventory_units:e.data.total_inventory_units,units_expiring_soon:e.data.units_expiring_soon,pending_requests:e.data.pending_requests,emergency_requests:e.data.emergency_requests,blood_type_distribution:e.data.blood_type_distribution,component_distribution:e.data.component_distribution,last_updated:e.data.last_updated};throw Error("Invalid response format from dashboard metrics API")}catch(e){throw console.error("Error fetching dashboard metrics:",e),Error("Failed to fetch dashboard metrics. Please check if the data service is running.")}},p=async(e=7)=>{try{let t=(await o.get(`/analytics/performance?days=${e}`)).data;if("success"===t.status)return{performance_metrics:t.performance_metrics,recent_improvements:t.recent_improvements,timestamp:t.timestamp};throw Error("Invalid response format from analytics API")}catch(e){throw console.error("Error fetching historical metrics:",e),Error("Failed to fetch analytics data. Please check if the analytics service is running.")}},u=async()=>{try{let e=(await o.get("/inventory")).data;if("success"===e.status&&e.inventory)return e.inventory;throw Error("Invalid response format from inventory API")}catch(e){throw console.error("Error fetching blood inventory:",e),Error("Failed to fetch blood inventory. Please check if the data service is running.")}},m=async(e=7)=>{try{try{console.log("\uD83D\uDD04 Attempting batch forecast...");let t=["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(async t=>{try{let r=(await o.get(`/forecast/${encodeURIComponent(t)}?periods=${e}`)).data;if("success"===r.status&&r.forecasts)return r.forecasts.map(e=>({blood_type:t,date:e.date,predicted_demand:e.predicted_demand,confidence_interval_lower:e.lower_bound,confidence_interval_upper:e.upper_bound}));return[]}catch(e){return console.error(`❌ Error fetching forecast for ${t}:`,e),[]}}),r=(await Promise.all(t)).flat();if(0===r.length)throw Error("No forecast data available from any blood type");return console.log(`✅ Successfully loaded ${r.length} forecast records using real ARIMA models`),r}catch(e){throw console.error("❌ Batch forecast failed:",e),e}}catch(e){throw console.error("❌ Error fetching forecasts:",e),Error("Failed to fetch forecast data. Please check if the forecasting service is running.")}},h=async()=>{try{let e=(await o.get("/recommendations/active")).data;if("success"===e.status&&e.recommendations)return e.recommendations;throw Error("Invalid response format from recommendations API")}catch(e){throw console.error("Error fetching optimization recommendations:",e),Error("Failed to fetch optimization recommendations. Please check if the optimization service is running.")}},y=async()=>{try{let e=(await o.get("/donors")).data;if("success"===e.status&&e.donors)return e.donors;throw Error("Invalid response format from donors API")}catch(e){throw console.error("Error fetching donors:",e),Error("Failed to fetch donors data. Please check if the data service is running.")}},g=async()=>{try{let e=(await o.post("/optimize")).data;if("success"===e.status)return e;throw Error("Invalid response format from optimization API")}catch(e){throw console.error("Error triggering optimization:",e),Error("Failed to trigger optimization. Please check if the optimization service is running.")}},x=async()=>{try{let[e,t,r,a,s]=await Promise.all([d(),u(),m(),h(),p(7)]),o=_(t),i=v(o,a),n=f(e,s);return{metrics:e,blood_types:o,forecasts:r,recommendations:a,alerts:i,trends:n}}catch(e){throw console.error("Error fetching dashboard data:",e),Error("Failed to fetch dashboard data. Please check if all backend services are running.")}},_=e=>["A+","A-","B+","B-","AB+","AB-","O+","O-"].map(t=>{let r;let a=e.filter(e=>e.blood_type===t).length;return r=a<=5?"critical":a<=15?"low":a<=30?"adequate":a<=40?"optimal":"excess",{type:t,current_stock:a,safety_stock:20,reorder_point:15,days_until_expiry:Math.floor(30*Math.random())+1,status:r,trend:["increasing","decreasing","stable"][Math.floor(3*Math.random())]}}),f=(e,t)=>{if(!t||0===t.length)return{total_donors:{value:"+12%",isPositive:!0},total_donations_today:{value:"+5",isPositive:!0},total_inventory_units:{value:"-2%",isPositive:!1},units_expiring_soon:{value:"+3",isPositive:!1},pending_requests:{value:"-1",isPositive:!0},emergency_requests:{value:"0",isPositive:!0},total_donations_this_month:{value:"+18%",isPositive:!0}};let r=t[0],a=(e,t)=>{if(0===t)return{value:"N/A",isPositive:!0};let r=(e-t)/t*100;return{value:`${r>=0?"+":""}${r.toFixed(1)}%`,isPositive:r>=0}},s=(e,t)=>{let r=e-t;return{value:`${r>=0?"+":""}${r}`,isPositive:r>=0}};return{total_donors:a(e.total_donors,r.total_donors),total_donations_today:s(e.total_donations_today,r.total_donations_today),total_inventory_units:a(e.total_inventory_units,r.total_inventory_units),units_expiring_soon:s(e.units_expiring_soon,r.units_expiring_soon),pending_requests:s(e.pending_requests,r.pending_requests),emergency_requests:s(e.emergency_requests,r.emergency_requests),total_donations_this_month:a(e.total_donations_this_month,r.total_donations_this_month)}},v=(e,t)=>{let r=[];return e.forEach(e=>{"critical"===e.status&&r.push({id:`critical-${e.type}`,type:"critical",title:"Critical Stock Level",message:`${e.type} blood type has critically low stock (${e.current_stock} units)`,blood_type:e.type,timestamp:new Date().toISOString(),acknowledged:!1})}),t.forEach(e=>{"emergency"===e.priority_level&&r.push({id:`emergency-${e.recommendation_id}`,type:"critical",title:"Emergency Order Required",message:e.reasoning,blood_type:e.blood_type,timestamp:e.created_at,acknowledged:!1})}),r},b=async e=>{try{return(await o.post(`/optimization/execute/${e}`)).data}catch(e){throw console.error("Failed to execute optimization order:",e),Error("Failed to execute optimization order. Please check if the optimization service is running.")}},w=async(e,t)=>{try{return(await o.post("/reports/generate",{type:e,filters:t||{},format:"pdf"})).data}catch(e){throw console.error("Failed to generate report:",e),Error("Failed to generate report. Please check if the reporting service is running.")}}},7202:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});let a=(0,r(6557).Z)("AlertTriangle",[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z",key:"c3ski4"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]])},8998:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});let a=(0,r(6557).Z)("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]])},4230:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>a});let a=(0,r(8570).createProxy)(String.raw`/home/tep/HealthTech/HealthTech/tracks/track3/dashboard/app/inventory/page.tsx#default`)}};var t=require("../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[770,407,383],()=>r(426));module.exports=a})();