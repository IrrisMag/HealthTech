# Railway Dockerfile for Track 2 - AI Chatbot System
FROM node:18-alpine AS frontend-builder

# Build the frontend with chatbot focus
WORKDIR /app/frontend
COPY feedback-reminder-system/feedback-ui-service/package*.json ./
RUN npm ci --only=production

COPY feedback-reminder-system/feedback-ui-service/ ./
ENV NODE_ENV=production
ENV NEXT_PUBLIC_CHATBOT_API_URL=/api/chatbot

RUN npm run build

# Python backend stage
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies for chatbot
RUN echo "fastapi==0.104.1\n\
uvicorn[standard]==0.24.0\n\
pymongo==4.6.0\n\
google-generativeai==0.3.2\n\
langchain==0.1.0\n\
langchain-google-genai==0.0.6\n\
langchain-community==0.0.10\n\
chromadb==0.4.18\n\
pypdf==3.17.4\n\
python-multipart==0.0.6\n\
pydantic==2.5.0\n\
python-dotenv==1.0.0\n\
requests==2.31.0\n\
aiofiles==23.2.1\n\
sentence-transformers==2.2.2\n\
numpy==1.24.3\n\
tiktoken==0.5.2" > requirements.txt

RUN pip install --no-cache-dir -r requirements.txt

# Copy chatbot application
COPY chatbot/ ./chatbot/
COPY shared/ ./shared/

# Copy the unified backend
COPY track2_unified_backend.py ./main_railway.py

# Copy built frontend
COPY --from=frontend-builder /app/frontend/.next ./static/
COPY --from=frontend-builder /app/frontend/public ./static/public/

EXPOSE $PORT

CMD python main_railway.py
