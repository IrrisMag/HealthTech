# Railway Dockerfile for Track 1 - Patient Communication System
FROM node:18-alpine AS frontend-builder

# Build the frontend
WORKDIR /app/frontend
COPY feedback-reminder-system/feedback-ui-service/package*.json ./
RUN npm ci --only=production

COPY feedback-reminder-system/feedback-ui-service/ ./
ENV NODE_ENV=production
ENV NEXT_PUBLIC_FEEDBACK_API_URL=/api/feedback
ENV NEXT_PUBLIC_AUTH_API_URL=/api/auth
ENV NEXT_PUBLIC_REMINDER_API_URL=/api/reminder
ENV NEXT_PUBLIC_NOTIFICATION_API_URL=/api/notification
ENV NEXT_PUBLIC_TRANSLATION_API_URL=/api/translation

RUN npm run build

# Python backend stage
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create requirements file with all dependencies
RUN echo "fastapi==0.104.1\n\
uvicorn[standard]==0.24.0\n\
pymongo==4.6.0\n\
python-jose[cryptography]==3.3.0\n\
passlib[bcrypt]==1.7.4\n\
python-multipart==0.0.6\n\
pydantic==2.5.0\n\
python-dotenv==1.0.0\n\
twilio==8.10.0\n\
requests==2.31.0\n\
email-validator==2.1.0\n\
motor==3.3.2\n\
aiofiles==23.2.1\n\
jinja2==3.1.2\n\
python-dateutil==2.8.2" > requirements.txt

RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY auth/ ./auth/
COPY feedback/ ./feedback/
COPY reminder/ ./reminder/
COPY notification/ ./notification/
COPY translation/ ./translation/
COPY shared/ ./shared/

# Copy the unified backend
COPY track1_unified_backend.py ./

# Copy built frontend
COPY --from=frontend-builder /app/frontend/.next ./static/
COPY --from=frontend-builder /app/frontend/public ./static/public/

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8000

EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Start the application with uvicorn
CMD ["python", "-m", "uvicorn", "track1_unified_backend:app", "--host", "0.0.0.0", "--port", "8000"]
