version: '3.8'

services:
  mongo:
    image: mongo:6.0
    restart: always
    ports:
      - "27018:27017"  # Different port to avoid conflicts with track1
    volumes:
      - mongo_data_track2:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=admin
    command: mongod --replSet rs0 --bind_ip_all

  auth:
    build: ./auth
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017}
      - DB_NAME=${DB_NAME_AUTH:-reminderdb_auth}
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-track2.rule=Host(`auth-track2.localhost`)"
      - "traefik.http.services.auth-track2.loadbalancer.server.port=8000"
    depends_on:
      - mongo

  chatbot:
    build: ./chatbot
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017}
      - DB_NAME=${DB_NAME_CHATBOT:-reminderdb_chatbot}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth:8000}
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # AI/ML specific environment variables
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - MODEL_NAME=${MODEL_NAME:-gpt-3.5-turbo}
      - MAX_TOKENS=${MAX_TOKENS:-150}
      - TEMPERATURE=${TEMPERATURE:-0.7}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatbot.rule=Host(`chatbot.localhost`)"
      - "traefik.http.services.chatbot.loadbalancer.server.port=8000"
    depends_on:
      - mongo
      - auth

  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "81:80"      # Different port to avoid conflicts with track1
      - "8081:8080"  # Different dashboard port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  mongo_data_track2:
